<launch>
    <node pkg="urg_node" type="urg_node" name="hokuyo" output="screen">
        <param name="ip_address" value=""/>
        <param name="serial_port" value="/dev/ttyACM0"/>
        <param name="serial_baud" value="115200"/>
        <param name="frame_id" value="laser"/>
        <param name="calibrate_time" value="false"/>
        <param name="publish_intensity" value="false"/>
        <param name="publish_multiecho" value="false"/>
        <param name="angle_min" value="-1.5707963"/>
        <param name="angle_max" value="1.5707963"/>
    </node>

    <node pkg="eurobot2019_tf" type="broadcaster.py" name="transforms" output="screen"/>

    <!-- Run the map server -->
    <node name="map_server" pkg="map_server" type="map_server" 
          args="$(find eurobot2019_nav)/map_params.yaml"/>

    <!-- Run AMCL -->
    <include file="$(find eurobot2019_nav)/launch/amcl.launch"/>

    <!-- Run move_base -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base"
          output="screen">
        <rosparam file="$(find eurobot2019_nav)/costmap_common_params.yaml"
                  command="load" ns="global_costmap"/>
        <rosparam file="$(find eurobot2019_nav)/costmap_common_params.yaml"
                  command="load" ns="local_costmap"/>
        <rosparam file="$(find eurobot2019_nav)/local_costmap_params.yaml"
                  command="load"/>
        <rosparam file="$(find eurobot2019_nav)/global_costmap_params.yaml"
                  command="load"/>
        <rosparam file="$(find eurobot2019_nav)/base_local_planner_params.yaml"
                  command="load"/>
    </node>

</launch>
