<launch>
    <!--
    <node pkg="urg_node" type="urg_node" name="hokuyo" output="screen">
        <param name="ip_address" value=""/>
        <param name="serial_port" value="/dev/ttyACM0"/>
        <param name="serial_baud" value="115200"/>
        <param name="frame_id" value="laser"/>
        <param name="calibrate_time" value="false"/>
        <param name="publish_intensity" value="false"/>
        <param name="publish_multiecho" value="false"/>
        <param name="angle_min" value="-1.5707963"/>
        <param name="angle_max" value="1.5707963"/>
    </node>
    -->

    <!-- TF transforms -->
    <!-- X Y Z YAW PITCH ROLL FRAME CHILD_FRAME -->
    <node pkg="tf2_ros" type="static_transform_publisher"
          name="laser_link_publisher"
          args="0 0 0 3.1415926 0 0 base_link laser"/>

    <!-- Run the map server -->
    <node name="map_server" pkg="map_server" type="map_server" 
          args="$(find eurobot2019_nav)/map_params.yaml"/>

    <!-- Run AMCL -->
    <include file="$(find eurobot2019_nav)/launch/amcl.launch"/>

    <!-- Run move_base -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base"
          output="screen">
        <rosparam file="$(find eurobot2019_nav)/costmap_common_params.yaml"
                  command="load" ns="global_costmap"/>
        <rosparam file="$(find eurobot2019_nav)/costmap_common_params.yaml"
                  command="load" ns="local_costmap"/>
        <rosparam file="$(find eurobot2019_nav)/local_costmap_params.yaml"
                  command="load"/>
        <rosparam file="$(find eurobot2019_nav)/global_costmap_params.yaml"
                  command="load"/>
        <rosparam file="$(find eurobot2019_nav)/base_local_planner_params.yaml"
                  command="load"/>
    </node>
    
    <!-- Run an ekf node to improve odom estimation -->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf"
          output="screen">
        <param name="frequency" value="30"/>
        <param name="sensor_timeout" value="0.5"/>
        <param name="two_d_mode" value="true"/>

        <!-- tf frames -->
        <param name="map_frame" value="map"/>
        <param name="odom_frame" value="odom_filtered"/>
        <param name="base_link_frame" value="base_link"/>
        <param name="world_frame" value="odom_filtered"/>

        <!-- sensor data streams to be fused -->
        <param name="odom0" value="odom"/>

        <!-- sensor config -->
        <rosparam param="odom0_config">[true , true , false,
                                        false, false, true ,
                                        true , true , false,
                                        false, false, true ,
                                        false, false, false]</rosparam>
        <param name="odom0_queue_size" value="1"/>
        <param name="odom0_differential" value="true"/>

        <rosparam file="$(find eurobot2019_nav)/initial_state.yaml"
                  command="load"/>

        <!-- general parameters -->
        <param name="publish_tf" value="true"/>
        <param name="print_diagnostics" value="true"/>

        <!-- "advanced" parameters -->
        <param name="use_control" value="true"/>
        <param name="control_timeout" value="1.0"/>
        <rosparam param="control_config">[true , true , false,
                                          false, false, true ]</rosparam>
        <param name="smooth_lagged_data" value="true"/>
        <param name="history_length" value="2.0"/>
    </node>

    <node pkg="fake_odometry" type="odom_publisher_node" name="fake_odom"/>
    <node pkg="scan_from_image" type="laser_scan_from_image" name="fake_laser">
        <rosparam file="$(find scan_from_image)/launch/scan_params.yaml" 
                  command="load" ns="/scan_params"/>
        <rosparam file="$(find eurobot2019_nav)/map_params.yaml" 
                  command="load" ns="/map_data"/>
    </node>
</launch>
